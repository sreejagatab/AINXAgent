generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          UserRole  @default(USER)
  apiKey        String?   @unique
  usageLimit    Int       @default(1000)
  usageCount    Int       @default(0)
  isActive      Boolean   @default(true)
  lastLoginAt   DateTime?
  prompts       Prompt[]
  tools         Tool[]
  evaluations   Evaluation[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([email])
  @@index([apiKey])
}

model Prompt {
  id            String    @id @default(cuid())
  name          String
  description   String?
  template      String
  variables     Json
  category      String?
  version       Int       @default(1)
  isPublic      Boolean   @default(false)
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  evaluations   Evaluation[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])
  @@index([category])
}

model Tool {
  id            String    @id @default(cuid())
  name          String
  description   String?
  type          String
  parameters    Json
  isPublic      Boolean   @default(false)
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])
  @@index([type])
}

model Evaluation {
  id            String    @id @default(cuid())
  promptId      String
  prompt        Prompt    @relation(fields: [promptId], references: [id])
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  response      String
  scores        Json
  suggestions   String[]
  metadata      Json?
  createdAt     DateTime  @default(now())

  @@index([promptId])
  @@index([userId])
}

enum UserRole {
  ADMIN
  USER
  API
} 